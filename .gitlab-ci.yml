stages:
  - üêç lint
  - ü§û test
  - üì¶ build
  - üöÄ deploy

variables:
  PYTHON_DOCKER_IMAGE: python:3.12-slim-bullseye
  SFCGAL_REGISTRY: registry.gitlab.com/sfcgal/sfcgal

lint:flake8:
  stage: üêç lint
  image: ${PYTHON_DOCKER_IMAGE}
  only:
    refs:
      - merge_requests
      - master
    changes:
      - "pysfcgal/*.py"
      - "tests/*.py"
      - ".gitlab-ci.yml"
  before_script:
    - python -m pip install --force-reinstall flake8==7.1.1
  script:
    - flake8 pysfcgal/ tests/ --config=setup.cfg

lint-commit:
  stage: üêç lint
  image: ${PYTHON_DOCKER_IMAGE}
  before_script:
    - apt-get update && apt-get install -y git
    - pip install commitizen
  script:
    - cz check --rev-range $CI_MERGE_REQUEST_DIFF_BASE_SHA..HEAD
  only:
    refs:
      - merge_requests

test:unit:
  stage: ü§û test
  image: ${SFCGAL_REGISTRY}:debian-latest
  only:
    refs:
      - merge_requests
      - master
    changes:
      - "pysfcgal/*.py"
      - "tests/*.py"
      - ".gitlab-ci.yml"
  before_script:
    - apt install --no-install-recommends --yes python3 python3-pip python3-dev python3-venv gcc
    - python3 -m venv venv
    - source venv/bin/activate
    - python3 -m pip install -U pytest pytest-cov
    - pip install -e .
  script:
    - pytest --junitxml=junit/test-results-unit.xml --cov pysfcgal --cov-report=xml:coverage-reports/coverage-unit.xml
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage-reports/coverage-unit.xml
      junit:
        - junit/test-results-unit.xml

build:windows-osgeo4w:
  stage: üì¶ build
  tags:
    - saas-windows-medium-amd64
  rules:
    # on default branch
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      when: always
    # on a tag
    - if: $CI_COMMIT_TAG
      when: always
    # on a MR if previous jobs are successful
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: manual
      allow_failure: true
  artifacts:
    paths:
      - dist
  script:
    # gitlab ci on widows does not handle the 'image' keyword
    # use docker build to be able to pull sfcgal/sfcgal-build-deps image
    - $env:dir = $pwd
    - docker run
      --rm
      --mount type=bind,source=$env:dir,target=c:\pysfcgal
      --workdir "c:\pysfcgal"
      $env:SFCGAL_REGISTRY':'windows-latest
      ".\ci\build.ps1"

deploy:pypi:
  stage: üöÄ deploy
  image: ${PYTHON_DOCKER_IMAGE}
  rules:
    # on a tag
    - if: $CI_COMMIT_TAG
  needs:
    - job: build:windows-osgeo4w
      artifacts: true
  before_script:
    - pip install twine
  script:
    - twine upload dist/*
